#!/usr/bin/env python3
"""
LINE Webhook Verification Test
Tests if LINE Developer Console can successfully connect to your webhook
"""

import requests
import time


def test_webhook_connection():
    """Test if webhook is accessible from LINE"""
    print("üîç Testing Webhook Connection for LINE Developer Console...")

    webhook_url = "https://6f59006e1132.ngrok-free.app/webhook"

    try:
        # Test basic connectivity
        response = requests.get(
            "https://6f59006e1132.ngrok-free.app/health", timeout=10
        )
        if response.status_code == 200:
            print("‚úÖ Base URL accessible")
        else:
            print(f"‚ùå Base URL issue: {response.status_code}")
            return False

        # Test webhook endpoint responds to POST
        test_payload = {"events": [], "destination": "test"}

        response = requests.post(
            webhook_url,
            json=test_payload,
            headers={
                "Content-Type": "application/json",
                "X-Line-Signature": "test_signature",
            },
            timeout=10,
        )

        if response.status_code == 200:
            print("‚úÖ Webhook endpoint responding correctly")
            print(f"   Response: {response.text}")
            return True
        else:
            print(f"‚ùå Webhook endpoint issue: {response.status_code}")
            return False

    except Exception as e:
        print(f"‚ùå Connection error: {e}")
        return False


def print_configuration_guide():
    """Print detailed configuration guide"""
    print("\n" + "=" * 60)
    print("üîß LINE DEVELOPER CONSOLE CONFIGURATION GUIDE")
    print("=" * 60)

    print("\nüìã Step-by-Step Instructions:")

    print("\n1Ô∏è‚É£ ACCESS LINE DEVELOPER CONSOLE")
    print("   ‚Ä¢ Go to: https://developers.line.biz/")
    print("   ‚Ä¢ Sign in with your LINE account")
    print("   ‚Ä¢ Select your Messaging API channel")

    print("\n2Ô∏è‚É£ CONFIGURE WEBHOOK URL")
    print("   ‚Ä¢ Go to 'Messaging API' tab")
    print("   ‚Ä¢ Find 'Webhook settings' section")
    print("   ‚Ä¢ Set Webhook URL to:")
    print("     https://6f59006e1132.ngrok-free.app/webhook")
    print("   ‚Ä¢ Click 'Update'")
    print("   ‚Ä¢ Toggle 'Use webhook' to ON ‚úÖ")

    print("\n3Ô∏è‚É£ ENABLE WEBHOOK EVENTS")
    print("   ‚Ä¢ In 'Messaging API' tab")
    print("   ‚Ä¢ Find 'Webhook events' section")
    print("   ‚Ä¢ Enable these events:")
    print("     ‚úÖ Message events")
    print("     ‚úÖ Follow events")
    print("     ‚úÖ Unfollow events")
    print("     ‚úÖ Postback events")

    print("\n4Ô∏è‚É£ VERIFY CONFIGURATION")
    print("   ‚Ä¢ Click 'Verify' button next to webhook URL")
    print("   ‚Ä¢ Should show 'Success' message")
    print("   ‚Ä¢ If error, check URL and try again")

    print("\n5Ô∏è‚É£ TEST YOUR BOT")
    print("   ‚Ä¢ Add your bot as friend in LINE")
    print("   ‚Ä¢ Send test message: 'ÊàëÊúÄËøëÂ∏∏Â∏∏ÂøòË®ò‰∫ãÊÉÖ'")
    print("   ‚Ä¢ Bot should reply with analysis")

    print("\n" + "=" * 60)
    print("üåê YOUR WEBHOOK INFORMATION")
    print("=" * 60)
    print(f"Webhook URL: https://6f59006e1132.ngrok-free.app/webhook")
    print(f"Health Check: https://6f59006e1132.ngrok-free.app/health")
    print(f"Status: Ready for configuration ‚úÖ")


def main():
    """Main function"""
    print("üß™ LINE WEBHOOK CONFIGURATION VERIFICATION")
    print("=" * 50)

    # Test webhook connectivity
    webhook_ok = test_webhook_connection()

    if webhook_ok:
        print("\n‚úÖ WEBHOOK READY FOR LINE DEVELOPER CONSOLE")
        print("Your webhook is accessible and ready to be configured.")
    else:
        print("\n‚ùå WEBHOOK CONNECTIVITY ISSUE")
        print("Please check your services before configuring LINE Developer Console.")

    # Print configuration guide
    print_configuration_guide()

    if webhook_ok:
        print("\nüéâ NEXT STEPS:")
        print("1. Follow the configuration guide above")
        print("2. Configure webhook in LINE Developer Console")
        print("3. Test your bot by sending messages")
        print("4. Monitor logs: docker-compose logs -f line-bot")


if __name__ == "__main__":
    main()
